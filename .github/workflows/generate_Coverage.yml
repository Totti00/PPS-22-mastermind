name: Generate Coverage

# Trigger workflow only after the "Run Tests" workflow has completed successfully
on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

jobs:
  generate-doc:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Ensure it only runs if tests succeed
    runs-on: ubuntu-22.04
    env:
      SCALA_TARGET: ./target/scala-3.3.5

    steps:
      # Step 1: Checkout the main branch
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          persist-credentials: false
          fetch-depth: 0  # Fetch full history to allow branch switching

      # Step 2: Set up Scala environment
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'sbt'

      # Step 3: Start X virtual framebuffer (xvfb) for JavaFX tests
      - name: Start xvfb
        run: Xvfb :99 -screen 0 1024x768x16 &

      # Step 4: Run sbt jacoco to generate coverage
      - name: Run sbt jacoco to generate coverage
        run: |
          export DISPLAY=:99
          sbt jacoco

      # Step 5: Generate Jacoco
      - name: Run sbt jacoco to generate coverage
        run: sbt jacoco

      # Step 6: Move generated coverage to a temporary directory
      - name: Move coverage to temporary directory
        run: |
          mkdir -p /tmp/coverage
          cp -r ${SCALA_TARGET}/jacoco/report/html/* /tmp/coverage

      # Step 7: Checkout the doc branch to add the coverage
      - name: Checkout doc branch
        uses: actions/checkout@v3
        with:
          ref: doc
          persist-credentials: false
          fetch-depth: 0  # Fetch full history to allow branch switching

      # Step 8: Copy the generated coverage to the Jekyll site
      - name: Copy coverage to Jekyll site
        run: |
          mkdir -p ./test-coverage
          cp -r /tmp/coverage/* ./test-coverage

      # Step 9: Commit the updated coverage
      - name: Commit changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          
          # Try to commit; if no changes, skip the push without failing
          git commit -m "Update coverage on Jekyll site" || {
            echo "No changes to commit. Skipping push.";
            exit 0;
          }

      # Step 10: Push changes to the doc branch
      - name: Push changes to the doc branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MASTERMIND_WORKFLOW_TOKEN }}
          branch: doc